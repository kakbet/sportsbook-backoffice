# .github/workflows/version-management.yml
name: Version Management

on:
  workflow_call:
    inputs:
      version_type:
        description: 'Version increment type'
        required: false
        default: 'patch'
        type: string
      custom_version:
        description: 'Custom version (optional)'
        required: false
        type: string
      version_file:
        description: 'Version file path'
        required: false
        default: 'version.txt'
        type: string
    outputs:
      new_version:
        description: "New version number"
        value: ${{ jobs.version-management.outputs.new_version }}
      current_version:
        description: "Current version number"
        value: ${{ jobs.version-management.outputs.current_version }}
    secrets:
      POT_TOKEN:
        required: true

jobs:
  version-management:
    runs-on: ubuntu-latest
    
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      current_version: ${{ steps.version.outputs.current_version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.POT_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get Current Version and Create New Version
        id: version
        run: |
          VERSION_FILE="${{ inputs.version_file }}"
          
          # Version dosyasından veya git tag'den versiyon al
          if [ -f "$VERSION_FILE" ]; then
            CURRENT_VERSION=$(cat $VERSION_FILE | tr -d '\n\r')
          elif git describe --tags --abbrev=0 2>/dev/null; then
            CURRENT_VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          else
            CURRENT_VERSION="1.0.0"
          fi
          
          echo "Current version: $CURRENT_VERSION"
          
          # Custom version varsa onu kullan
          if [ -n "${{ inputs.custom_version }}" ]; then
            NEW_VERSION="${{ inputs.custom_version }}"
            echo "Using custom version: $NEW_VERSION"
          else
            # Versiyon parçalarını ayır
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
            # Sayı kontrol
            if ! [[ "$MAJOR" =~ ^[0-9]+$ ]] || ! [[ "$MINOR" =~ ^[0-9]+$ ]] || ! [[ "$PATCH" =~ ^[0-9]+$ ]]; then
              echo "Invalid version format, resetting to 1.0.0"
              MAJOR=1; MINOR=0; PATCH=0
            fi
          
            # Version type'a göre artır
            VERSION_TYPE="${{ inputs.version_type }}"
          
            case $VERSION_TYPE in
              major) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0 ;;
              minor) MINOR=$((MINOR + 1)); PATCH=0 ;;
              patch) PATCH=$((PATCH + 1)) ;;
            esac
          
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          fi
          
          # Version format kontrolü
          if ! [[ "$NEW_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format: $NEW_VERSION, using fallback"
            NEW_VERSION="1.0.0"
          fi
          
          echo "Final new version: $NEW_VERSION"
          
          # Version dosyasını güncelle
          echo "$NEW_VERSION" > $VERSION_FILE
          
          # Git tag oluştur
          if git tag "v${NEW_VERSION}"; then
            echo "Tag v${NEW_VERSION} created successfully"
            if git push origin "v${NEW_VERSION}"; then
              echo "Tag v${NEW_VERSION} pushed successfully"
            else
              echo "Failed to push tag, but continuing..."
            fi
          fi
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Archive Version File
        uses: actions/upload-artifact@v4
        with:
          name: version-file-${{ steps.version.outputs.new_version }}
          path: ${{ inputs.version_file }}
          retention-days: 30