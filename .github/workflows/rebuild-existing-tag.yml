# .github/workflows/rebuild-existing-tag.yml
name: Rebuild Existing Tag

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to rebuild (e.g., v1.2.3)'
        required: true
        type: string
      super_branch:
        description: 'Super repository branch (optional - will use tag if not specified)'
        required: false
        type: string
      pgf_branch:
        description: 'PGF repository branch (optional - will use tag if not specified)'
        required: false
        type: string
      pglib_branch:
        description: 'PGLib repository branch (optional - will use tag if not specified)'
        required: false
        type: string
      php_version:
        description: 'PHP Version'
        required: false
        default: '8.3'
        type: string

env:
  POT_TOKEN: ${{ secrets.POT_TOKEN }}

permissions:
  contents: write
  actions: read
  id-token: write
  packages: write

jobs:
  # 1. Validate and Extract Version
  validate-and-extract:
    name: Validate Tag and Extract Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      tag_exists: ${{ steps.validate.outputs.tag_exists }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.POT_TOKEN }}
          fetch-depth: 0

      - name: Validate Tag Exists
        id: validate
        run: |
          TAG_NAME="${{ github.event.inputs.tag_name }}"
          
          # Remove 'v' prefix if present for consistency
          if [[ "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚úÖ Valid tag format: $TAG_NAME"
          elif [[ "$TAG_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            TAG_NAME="v$TAG_NAME"
            echo "‚úÖ Added 'v' prefix: $TAG_NAME"
          else
            echo "‚ùå Invalid tag format. Expected: v1.2.3 or 1.2.3"
            exit 1
          fi
          
          # Check if tag exists
          if git tag -l | grep -q "^${TAG_NAME}$"; then
            echo "‚úÖ Tag $TAG_NAME exists"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "validated_tag=$TAG_NAME" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Tag $TAG_NAME does not exist"
            echo "Available tags:"
            git tag -l | tail -10
            exit 1
          fi

      - name: Extract Version from Tag
        id: extract
        run: |
          TAG_NAME="${{ steps.validate.outputs.validated_tag }}"
          VERSION=$(echo "$TAG_NAME" | sed 's/^v//')
          
          echo "‚úÖ Extracted version: $VERSION from tag: $TAG_NAME"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Checkout Specific Tag
        run: |
          TAG_NAME="${{ steps.validate.outputs.validated_tag }}"
          echo "üè∑Ô∏è Checking out tag: $TAG_NAME"
          git checkout "$TAG_NAME"
          
          echo "üìã Current commit info:"
          git log -1 --oneline
          git describe --tags --exact-match

  # 2. Rebuild PHP Multi-Repo
  php-rebuild:
    name: Rebuild PHP Sportsbook
    needs: [validate-and-extract]
    if: needs.validate-and-extract.outputs.tag_exists == 'true'
    uses: ./.github/workflows/php-multi-repo-build.yml
    with:
      super_branch: ${{ github.event.inputs.super_branch || 'main' }}
      pgf_branch: ${{ github.event.inputs.pgf_branch || 'main' }}
      pglib_branch: ${{ github.event.inputs.pglib_branch || 'main' }}
      version: ${{ needs.validate-and-extract.outputs.version }}
      ecr_registry: "827604626727.dkr.ecr.eu-central-1.amazonaws.com"
      ecr_repository: "sb/sportsbook-backoffice"
      base_image: "827604626727.dkr.ecr.eu-central-1.amazonaws.com/sb/sportsbook-php-fpm"
      php_version: ${{ github.event.inputs.php_version || '8.3' }}
      build_args: |
        {
          "PHP_ENV": "production"
        }
      labels: |
        {
          "php.version": "${{ github.event.inputs.php_version || '8.3' }}",
          "description": "PHP Sportsbook Backoffice - Rebuilt from tag",
          "maintainer": "Development Team",
          "project.type": "php-application",
          "rebuild.tag": "${{ github.event.inputs.tag_name }}",
          "rebuild.date": "${{ github.run_id }}"
        }
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  # 3. Rebuild Nginx
  nginx-rebuild:
    name: Rebuild Nginx
    needs: [validate-and-extract]
    if: needs.validate-and-extract.outputs.tag_exists == 'true'
    uses: ./.github/workflows/nginx-build.yml
    with:
      super_branch: ${{ github.event.inputs.super_branch || 'main' }}
      version: ${{ needs.validate-and-extract.outputs.version }}
      ecr_registry: "827604626727.dkr.ecr.eu-central-1.amazonaws.com"
      ecr_repository: "sb/sportsbook-nginx"
      dockerfile_path: "sportsbook-nginx/Dockerfile"
      build_context: "."
      platforms: "linux/amd64,linux/arm64"
      nginx_version: "1.17-alpine"
      build_args: |
        {
          "NGINX_ENV": "production"
        }
      labels: |
        {
          "nginx.version": "1.17-alpine",
          "description": "Sportsbook Nginx Reverse Proxy - Rebuilt from tag",
          "maintainer": "Development Team",
          "project.type": "nginx-proxy",
          "rebuild.tag": "${{ github.event.inputs.tag_name }}",
          "rebuild.date": "${{ github.run_id }}"
        }
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  # 4. Summary
  rebuild-summary:
    name: Rebuild Summary
    runs-on: ubuntu-latest
    needs: [validate-and-extract, php-rebuild, nginx-rebuild]
    if: always()
    
    steps:
      - name: Print Rebuild Summary
        run: |
          echo "## üîÑ Tag Rebuild Summary"
          echo "**Tag**: ${{ github.event.inputs.tag_name }}"
          echo "**Version**: ${{ needs.validate-and-extract.outputs.version }}"
          echo "**Triggered by**: ${{ github.actor }}"
          echo "**Run ID**: ${{ github.run_id }}"
          echo ""
          echo "### üì¶ Rebuilt Images:"
          echo "- **PHP**: 827604626727.dkr.ecr.eu-central-1.amazonaws.com/sb/sportsbook-backoffice:${{ needs.validate-and-extract.outputs.version }}"
          echo "- **Nginx**: 827604626727.dkr.ecr.eu-central-1.amazonaws.com/sb/sportsbook-nginx:${{ needs.validate-and-extract.outputs.version }}"
          echo ""
          echo "### üéØ Job Status:"
          echo "- **Validation**: ‚úÖ Success"
          echo "- **PHP Rebuild**: ${{ needs.php-rebuild.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
          echo "- **Nginx Rebuild**: ${{ needs.nginx-rebuild.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
          
          if [[ "${{ needs.php-rebuild.result }}" == "success" && "${{ needs.nginx-rebuild.result }}" == "success" ]]; then
            echo ""
            echo "üéâ **All rebuilds completed successfully!**"
          else
            echo ""
            echo "‚ö†Ô∏è **Some rebuilds failed. Check the job logs for details.**"
          fi
